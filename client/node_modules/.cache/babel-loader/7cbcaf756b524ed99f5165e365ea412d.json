{"ast":null,"code":"var _jsxFileName = \"/home/brian/code/symplr-test/doctective/client/src/components/ProviderCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProviderCard(_ref) {\n  _s();\n\n  let {\n    provider\n  } = _ref;\n  const [comic, setComic] = useState({\n    img: '',\n    title: ''\n  });\n  const [status, setStatus] = useState('idle');\n  useEffect(() => {\n    setStatus('loading');\n    fetch('/comics/random').then(resp => resp.json()).then(data => {\n      const {\n        title,\n        img\n      } = data;\n      setComic({\n        title: title,\n        img: img\n      });\n      setStatus('idle');\n    });\n  }, []);\n  const {\n    picture,\n    name,\n    gender,\n    cell,\n    email,\n    location\n  } = provider;\n\n  function formatName(nameObj) {\n    const {\n      title,\n      first,\n      last\n    } = nameObj;\n    return `${title}. ${first} ${last}`;\n  }\n\n  function formatLocation(locationObj) {\n    const {\n      street,\n      city,\n      state,\n      country,\n      postcode\n    } = locationObj;\n    return `${street.number} ${street.name}, ${city}, ${state}, ${postcode}, ${country}`;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-wrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: picture.medium,\n          alt: formatName(name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: formatName(name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: gender === 'female' ? '♀️' : '♂️'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Address: \", formatLocation(location)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Favorite XKCD comic: \", status === 'loading' ? /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this) : /*#__PURE__*/_jsxDEV(\"a\", {\n            href: comic.img,\n            target: \"_blank\",\n            rel: \"noreferrer noopener\",\n            children: comic.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phone\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"\\u260E\\uFE0F \", cell]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ProviderCard, \"em5h3rrPQxVf+BCRTXpWxbEKqz4=\");\n\n_c = ProviderCard;\nexport default ProviderCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderCard\");","map":{"version":3,"sources":["/home/brian/code/symplr-test/doctective/client/src/components/ProviderCard.js"],"names":["React","useState","useEffect","ProviderCard","provider","comic","setComic","img","title","status","setStatus","fetch","then","resp","json","data","picture","name","gender","cell","email","location","formatName","nameObj","first","last","formatLocation","locationObj","street","city","state","country","postcode","number","medium"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\n\nfunction ProviderCard({ provider }) {\n    const [comic, setComic] = useState({\n        img: '',\n        title: ''\n    })\n    const [status, setStatus] = useState('idle')\n\n    useEffect(() => {\n        setStatus('loading')\n        fetch('/comics/random')\n          .then(resp => resp.json())\n          .then(data => {\n              const { title, img } = data\n              setComic({\n                  title: title,\n                  img: img\n              })\n              setStatus('idle')\n          })\n    }, [])\n\n    const { picture, name, gender, cell, email, location} = provider\n\n    function formatName(nameObj){\n        const {title, first, last} = nameObj\n        return `${title}. ${first} ${last}`\n    }\n\n    function formatLocation(locationObj){\n        const { street, city, state, country, postcode } = locationObj\n        return `${street.number} ${street.name}, ${city}, ${state}, ${postcode}, ${country}`\n    }\n\n    return (\n        <div className='card'>\n            <div className='info-wrap'>\n                <div>\n                    <img src={picture.medium} alt={formatName(name)} />\n                </div>\n                <div>\n                    <div className='card-header'>\n                        <h2>{formatName(name)}</h2>\n                        <p>{gender === 'female' ? '♀️' : '♂️'}</p>\n                    </div>\n                    <p>Email: {email}</p>\n                    <p>Address: {formatLocation(location)}</p>\n                    <p>Favorite XKCD comic: {\n                        status === 'loading' ? \n                            <span>Loading...</span> \n                        : \n                            <a href={comic.img} target=\"_blank\" rel=\"noreferrer noopener\">{comic.title}</a>\n                    }</p>\n                </div>\n            </div>\n            <div>\n                <div className='phone'>\n                    <span>☎️ {cell}</span>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProviderCard\n"]},"metadata":{},"sourceType":"module"}